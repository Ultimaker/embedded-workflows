on:
  workflow_call:
    inputs:
      RELEASE_REPO:
        description: "The Cloudsmith repository to release the package"
        required: true
        type: string

jobs:
  Release_Package:
    name: 'Release Package'
    runs-on: ubuntu-latest
    env:
      RELEASE_REPO: ${{ inputs.RELEASE_REPO }}
    steps:
      - name: Cloning Embedded-Workflows on default branch
        uses: actions/checkout@v4
        with:
          repository: Ultimaker/embedded-workflows
          token: ${{ secrets.ULTIMAKER_CI_PAT }}
          fetch-depth: 0
          path: embedded-workflows
          
      - uses: actions/download-artifact@v4
        with:
          name: build-package
          
      - name: Display structure of downloaded files
        shell: bash
        run: ls -lh
        
      - name: Build Cloudsmith Docker image
        shell: bash
        run: |
          docker build embedded-workflows/Dockerfiles/ -f embedded-workflows/Dockerfiles/cloudsmith.Dockerfile -t cloudsmith-cli:latest
          
      - name: Upload Debian Packages
        shell: bash
        run: |
          for package in *.deb; do
            echo " "
            echo "########## Uploading ${package} ##########"
            echo " "
            docker run -v "$(pwd):/build" cloudsmith-cli:latest cloudsmith push deb ultimaker/${{ env.RELEASE_REPO }}/debian/buster /build/${package} -k ${{ secrets.CLOUDSMITH_API_KEY }}
            docker run -v "$(pwd):/build" cloudsmith-cli:latest cloudsmith push deb ultimaker/${{ env.RELEASE_REPO }}/debian/bullseye /build/${package} -k ${{ secrets.CLOUDSMITH_API_KEY }}
            docker run -v "$(pwd):/build" cloudsmith-cli:latest cloudsmith push deb ultimaker/${{ env.RELEASE_REPO }}/debian/bookworm /build/${package} -k ${{ secrets.CLOUDSMITH_API_KEY }}
          done;
         
      - name: Dump GitHub context
        if: ${{ always() }}
        env:
           GITHUB_CONTEXT: ${{ toJson(github) }}
           JOB_CONTEXT: ${{ toJson(job) }}
           STEPS_CONTEXT: ${{ toJson(steps) }}
           RUNNER_CONTEXT: ${{ toJson(runner) }}
        shell: bash
        run: |
          echo "${GITHUB_CONTEXT}"
          echo "${JOB_CONTEXT}"
          echo "${STEPS_CONTEXT}"
          echo "${RUNNER_CONTEXT}"
